{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. delta.md # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. delta.md # Other markdown pages, images and other files.","title":"Project layout"},{"location":"delta/","text":"Delta Lake com Apache Spark Este documento apresenta o uso do Delta Lake com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos. Modelo de Dados O sistema utiliza duas tabelas principais: cliente_delta : armazena informa\u00e7\u00f5es dos clientes. carro_delta : armazena os ve\u00edculos, associados aos clientes. Modelo ER Abaixo, o modelo entidade-relacionamento utilizado: Fonte dos Dados Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora. Cria\u00e7\u00e3o das Tabelas CREATE TABLE cliente_delta ( id INT, nome STRING, email STRING, telefone STRING ) USING delta; CREATE TABLE carro_delta ( id INT, placa STRING, cliente_id INT ) USING delta; Inser\u00e7\u00e3o de Dados INSERT INTO cliente_delta VALUES (1, 'Ana Souza', 'ana@email.com', '(11) 91234-5678'), (2, 'Bruno Lima', 'bruno@email.com', '(21) 99876-5432'), (3, 'Carla Mendes', 'carla@email.com', '(31) 98765-4321'); INSERT INTO carro_delta VALUES (1, 'XYZ1J34', 1), (2, 'RLC5B93', 2), (3, 'ABC9Z88', 1); Atualiza\u00e7\u00e3o de Dados UPDATE cliente_delta SET telefone = '(11) 90000-0000' WHERE id = 1; Exclus\u00e3o de Dados DELETE FROM carro_delta WHERE id = 2; Hist\u00f3rico Delta Lake from delta.tables import DeltaTable cliente = DeltaTable.forPath(spark, \"./spark-warehouse/cliente_delta\") cliente.history().show(truncate=False)","title":"Delta"},{"location":"delta/#delta-lake-com-apache-spark","text":"Este documento apresenta o uso do Delta Lake com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos.","title":"Delta Lake com Apache Spark"},{"location":"delta/#modelo-de-dados","text":"O sistema utiliza duas tabelas principais: cliente_delta : armazena informa\u00e7\u00f5es dos clientes. carro_delta : armazena os ve\u00edculos, associados aos clientes.","title":"Modelo de Dados"},{"location":"delta/#modelo-er","text":"Abaixo, o modelo entidade-relacionamento utilizado:","title":"Modelo ER"},{"location":"delta/#fonte-dos-dados","text":"Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora.","title":"Fonte dos Dados"},{"location":"delta/#criacao-das-tabelas","text":"CREATE TABLE cliente_delta ( id INT, nome STRING, email STRING, telefone STRING ) USING delta; CREATE TABLE carro_delta ( id INT, placa STRING, cliente_id INT ) USING delta;","title":"Cria\u00e7\u00e3o das Tabelas"},{"location":"delta/#insercao-de-dados","text":"INSERT INTO cliente_delta VALUES (1, 'Ana Souza', 'ana@email.com', '(11) 91234-5678'), (2, 'Bruno Lima', 'bruno@email.com', '(21) 99876-5432'), (3, 'Carla Mendes', 'carla@email.com', '(31) 98765-4321'); INSERT INTO carro_delta VALUES (1, 'XYZ1J34', 1), (2, 'RLC5B93', 2), (3, 'ABC9Z88', 1);","title":"Inser\u00e7\u00e3o de Dados"},{"location":"delta/#atualizacao-de-dados","text":"UPDATE cliente_delta SET telefone = '(11) 90000-0000' WHERE id = 1;","title":"Atualiza\u00e7\u00e3o de Dados"},{"location":"delta/#exclusao-de-dados","text":"DELETE FROM carro_delta WHERE id = 2;","title":"Exclus\u00e3o de Dados"},{"location":"delta/#historico-delta-lake","text":"from delta.tables import DeltaTable cliente = DeltaTable.forPath(spark, \"./spark-warehouse/cliente_delta\") cliente.history().show(truncate=False)","title":"Hist\u00f3rico Delta Lake"}]}