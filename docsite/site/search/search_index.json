{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Projeto desenvolvido para demonstra\u00e7\u00e3o do Apache Spark Local (pyspark) gravando arquivos no formato Delta Lake e formato Apache Iceberg tamb\u00e9m de forma local. Apache Spark com Delta Lake Delta Lake : descri\u00e7\u00e3o da tabela Delta, modelo ER, c\u00f3digo DDL e exemplos de comandos INSERT , UPDATE e DELETE . Apache Spark com Apache Iceberg Apache Iceberg : descri\u00e7\u00e3o da tabela Iceberg, modelo ER, c\u00f3digo DDL e exemplos de comandos INSERT e DELETE .","title":"Home"},{"location":"#home","text":"Projeto desenvolvido para demonstra\u00e7\u00e3o do Apache Spark Local (pyspark) gravando arquivos no formato Delta Lake e formato Apache Iceberg tamb\u00e9m de forma local.","title":"Home"},{"location":"#apache-spark-com-delta-lake","text":"Delta Lake : descri\u00e7\u00e3o da tabela Delta, modelo ER, c\u00f3digo DDL e exemplos de comandos INSERT , UPDATE e DELETE .","title":"Apache Spark com Delta Lake"},{"location":"#apache-spark-com-apache-iceberg","text":"Apache Iceberg : descri\u00e7\u00e3o da tabela Iceberg, modelo ER, c\u00f3digo DDL e exemplos de comandos INSERT e DELETE .","title":"Apache Spark com Apache Iceberg"},{"location":"delta/","text":"Delta Lake com Apache Spark Este documento apresenta o uso do Delta Lake com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos. Modelo de Dados O sistema utiliza duas tabelas principais: cliente_delta : armazena informa\u00e7\u00f5es dos clientes. carro_delta : armazena os ve\u00edculos, associados aos clientes. Modelo ER Abaixo, o modelo entidade-relacionamento utilizado: Fonte dos Dados Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora. Cria\u00e7\u00e3o das Tabelas CREATE TABLE cliente_delta ( id INT, nome STRING, email STRING, telefone STRING ) USING delta; CREATE TABLE carro_delta ( id INT, placa STRING, cliente_id INT ) USING delta; Inser\u00e7\u00e3o de Dados INSERT INTO cliente_delta VALUES (1, 'Ana Souza', 'ana@email.com', '(11) 91234-5678'), (2, 'Bruno Lima', 'bruno@email.com', '(21) 99876-5432'), (3, 'Carla Mendes', 'carla@email.com', '(31) 98765-4321'); INSERT INTO carro_delta VALUES (1, 'XYZ1J34', 1), (2, 'RLC5B93', 2), (3, 'ABC9Z88', 1); Atualiza\u00e7\u00e3o de Dados UPDATE cliente_delta SET telefone = '(11) 90000-0000' WHERE id = 1; Exclus\u00e3o de Dados DELETE FROM carro_delta WHERE id = 2; Hist\u00f3rico Delta Lake from delta.tables import DeltaTable cliente = DeltaTable.forPath(spark, \"./spark-warehouse/cliente_delta\") cliente.history().show(truncate=False)","title":"Delta"},{"location":"delta/#delta-lake-com-apache-spark","text":"Este documento apresenta o uso do Delta Lake com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos.","title":"Delta Lake com Apache Spark"},{"location":"delta/#modelo-de-dados","text":"O sistema utiliza duas tabelas principais: cliente_delta : armazena informa\u00e7\u00f5es dos clientes. carro_delta : armazena os ve\u00edculos, associados aos clientes.","title":"Modelo de Dados"},{"location":"delta/#modelo-er","text":"Abaixo, o modelo entidade-relacionamento utilizado:","title":"Modelo ER"},{"location":"delta/#fonte-dos-dados","text":"Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora.","title":"Fonte dos Dados"},{"location":"delta/#criacao-das-tabelas","text":"CREATE TABLE cliente_delta ( id INT, nome STRING, email STRING, telefone STRING ) USING delta; CREATE TABLE carro_delta ( id INT, placa STRING, cliente_id INT ) USING delta;","title":"Cria\u00e7\u00e3o das Tabelas"},{"location":"delta/#insercao-de-dados","text":"INSERT INTO cliente_delta VALUES (1, 'Ana Souza', 'ana@email.com', '(11) 91234-5678'), (2, 'Bruno Lima', 'bruno@email.com', '(21) 99876-5432'), (3, 'Carla Mendes', 'carla@email.com', '(31) 98765-4321'); INSERT INTO carro_delta VALUES (1, 'XYZ1J34', 1), (2, 'RLC5B93', 2), (3, 'ABC9Z88', 1);","title":"Inser\u00e7\u00e3o de Dados"},{"location":"delta/#atualizacao-de-dados","text":"UPDATE cliente_delta SET telefone = '(11) 90000-0000' WHERE id = 1;","title":"Atualiza\u00e7\u00e3o de Dados"},{"location":"delta/#exclusao-de-dados","text":"DELETE FROM carro_delta WHERE id = 2;","title":"Exclus\u00e3o de Dados"},{"location":"delta/#historico-delta-lake","text":"from delta.tables import DeltaTable cliente = DeltaTable.forPath(spark, \"./spark-warehouse/cliente_delta\") cliente.history().show(truncate=False)","title":"Hist\u00f3rico Delta Lake"},{"location":"iceberg/","text":"Apache Iceberg com Apache Spark Este documento apresenta o uso do Apache Iceberg com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos. Modelo de Dados O sistema utiliza duas tabelas principais: cliente : armazena informa\u00e7\u00f5es dos clientes. carro : armazena os ve\u00edculos. Modelo ER Abaixo, o modelo entidade-relacionamento utilizado: Fonte dos Dados Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora. Cria\u00e7\u00e3o das Tabelas spark.sql( CREATE TABLE local.carro_iceberg ( id INT, placa STRING, marca STRING, modelo STRING, ano INT, cor STRING ) USING iceberg ) spark.sql( CREATE TABLE local.cliente_iceberg ( id INT, nome STRING, email STRING ) USING iceberg ) Inser\u00e7\u00e3o de Dados INSERT INTO local.cliente_iceberg VALUES (1, 'Jo\u00e3o Silva', 'joao.silva@email.com', '123456789', 'Rua A, 123'), (2, 'Maria Oliveira', 'maria.oliveira@email.com', '987654321', 'Avenida B, 456'), (3, 'Carlos Souza', 'carlos.souza@email.com', '112233445', 'Rua C, 789'), (4, 'Aline Lima', 'aline@email.com', '556677889', 'Rua D, 101') INSERT INTO local.carro_iceberg VALUES (1, 'ABC1234', 'Fiat', 'Uno', 2020, 'Azul'), (2, 'XYZ5678', 'Volkswagen', 'Gol', 2018, 'Preto') Exclus\u00e3o de Dados delete from local.cliente_iceberg where id = 3","title":"Iceberg"},{"location":"iceberg/#apache-iceberg-com-apache-spark","text":"Este documento apresenta o uso do Apache Iceberg com Apache Spark em um cen\u00e1rio de gerenciamento de clientes e ve\u00edculos.","title":"Apache Iceberg com Apache Spark"},{"location":"iceberg/#modelo-de-dados","text":"O sistema utiliza duas tabelas principais: cliente : armazena informa\u00e7\u00f5es dos clientes. carro : armazena os ve\u00edculos.","title":"Modelo de Dados"},{"location":"iceberg/#modelo-er","text":"Abaixo, o modelo entidade-relacionamento utilizado:","title":"Modelo ER"},{"location":"iceberg/#fonte-dos-dados","text":"Os dados utilizados neste projeto s\u00e3o fict\u00edcios e representam clientes e ve\u00edculos de uma locadora.","title":"Fonte dos Dados"},{"location":"iceberg/#criacao-das-tabelas","text":"spark.sql( CREATE TABLE local.carro_iceberg ( id INT, placa STRING, marca STRING, modelo STRING, ano INT, cor STRING ) USING iceberg ) spark.sql( CREATE TABLE local.cliente_iceberg ( id INT, nome STRING, email STRING ) USING iceberg )","title":"Cria\u00e7\u00e3o das Tabelas"},{"location":"iceberg/#insercao-de-dados","text":"INSERT INTO local.cliente_iceberg VALUES (1, 'Jo\u00e3o Silva', 'joao.silva@email.com', '123456789', 'Rua A, 123'), (2, 'Maria Oliveira', 'maria.oliveira@email.com', '987654321', 'Avenida B, 456'), (3, 'Carlos Souza', 'carlos.souza@email.com', '112233445', 'Rua C, 789'), (4, 'Aline Lima', 'aline@email.com', '556677889', 'Rua D, 101') INSERT INTO local.carro_iceberg VALUES (1, 'ABC1234', 'Fiat', 'Uno', 2020, 'Azul'), (2, 'XYZ5678', 'Volkswagen', 'Gol', 2018, 'Preto')","title":"Inser\u00e7\u00e3o de Dados"},{"location":"iceberg/#exclusao-de-dados","text":"delete from local.cliente_iceberg where id = 3","title":"Exclus\u00e3o de Dados"}]}